import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Scanner;

/**
 * 출력 -> System.out.print
 * 입력 -> Scanner(System.in)
 * 
 * @author super
 *
 */

public class MemoMain {
	
	ArrayList<Memo> list = new ArrayList<>();
	
	public static void main(String[] args) {
		// 입력을 받아서 처리하는 도구
		Scanner scanner = new Scanner(System.in);
		MemoMain main = new MemoMain();
		
		// 명령어를 입력받아서 후속 처리
		// c -create : 데이터 입력모드로 전환
		// r -read : 데이터 읽기모드로 전환
		// u -update : 데이터  수정모드로 전환
		// d =delete : 데이터 삭제모드로 전환
		
		String command = "";
		
		System.out.println("------- 명령어를 입력하세요 --------");
		System.out.println("c : 쓰기, r : 읽기, u : 수정, d : 삭제, l : 목록");
		System.out.println("-----------------------------");
		System.out.println("exit : 종료");
		System.out.println("-----------------------------");
		
		while(!command.equals("exit")) {
			command = scanner.nextLine();
			// 명령어를 분기처리
			switch(command) {
			case "c":
				main.create(scanner);
				break;
			case "r":
				main.read(scanner);
				break;
			case "u":
				main.update(scanner);
				break;
			case "d":
				main.delete(scanner);
				break;
			case "l":
				main.showList();
				break;
			}
			System.out.println("입력된값:" + command);
		}
		
		System.out.println("시스템이 종료되었습니다!");
		
		// 키보드 입력중에 Enter키가 입력될때까지 대기
		/*String test = scanner.nextLine(); 
		System.out.println(test);*/
		
		// 키보드 입력을 받는 함수
		
		
	}
	
	public void create(Scanner scanner) {
		Memo memo = new Memo();
		
		memo.no = list.size() + 1;
		
		System.out.println("이름을 입력하세요 : ");
		memo.name = scanner.nextLine();	
		System.out.println("내용을 입력하세요 :");
		memo.content = scanner.nextLine();
		System.out.println("날짜를 입력하세요 :");
		// 날짜
		memo.datetime = System.currentTimeMillis();
		// 글 하나를 저장한 메모리를 저장소로 이동
		list.add(memo);
	}
	
	public void read(Scanner scanner) {
		System.out.println("글 번호를 입력하세요");
		
		//--------숫자가 입력되지 않았을 때의 예외 처리------//
		String tempNo = scanner.nextLine();
		int no = Integer.parseInt(tempNo);
		
		for (Memo memo : list) {
			if (memo.no == no) {
				System.out.print("No : " + memo.no);
				System.out.print(" | Auther : " + memo.name);
				System.out.println(" | Content : " + memo.content);
				
				// 숫자로 입력받은 날짜값을 실제 날짜로 변경
				SimpleDateFormat sdf = new SimpleDateFormat ("yyyy-MM-dd hh:mm:ss");
				String formattedDate = sdf.format(memo.datetime);
				System.out.println("Date : " + formattedDate);
				
				break;
			}
		}
	}
	
	public void update(Scanner scanner) {
		
	}
	
	public void delete(Scanner scanner) {
		
	}
	
	public void showList() {
		// ArrayList 저장소를 반복문을 돌면서 한줄씩 출력
		for(Memo memo : list) {
			System.out.print("No : " + memo.no);
			System.out.print(" | Auther : " + memo.name);
			System.out.println(" | Content : " + memo.content);
			//index++;
		}
	}
}

class Memo {
	int no;
	String name;
	String content;
	long datetime;
}